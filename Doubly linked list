#include<stdio.h>
#include<ctype.h>
struct node
{
    char ssn[3],name[10],branch[6];
    struct node *llink;
    struct node *rlink;
};
struct node *head=NULL;
struct node *createnode()
{
    struct node *temp;
    temp=malloc(sizeof(struct node));
    printf("enter ssn\n");
    fflush(stdin);
    gets(temp->ssn);
    printf("enter the name\n");
    gets(temp->name);
    printf("enter the branch\n");
    gets(temp->branch);
    temp->llink=NULL;
    temp->rlink=NULL;
    return temp;
}
void insertfront()
{
    struct node *temp=NULL;
    temp=createnode();
    if(temp!=NULL)
    {
        temp->rlink=head;
        head->llink=temp;
    }
    head=temp;
}
void delfront()
{
    struct node *temp=head;
    if(head==NULL)
    {
        printf("dll is empty\n");
        return;
    }
    printf("the deleted node is:\n");
    printf("ssn=%s\n",temp->ssn);
    printf("name=%s\n",temp->name);
    printf("branch=%s\n",temp->branch);
    head=temp->rlink;
    head->llink=NULL;
    free(temp);
}
void insertend()
{
    struct node *temp1,*temp2=head;
    temp1=createnode();
    if(head==NULL)
    {
        head=temp1;
        return;
    }
    else
    {
        while(temp2->rlink!=NULL)
        {
            temp2=temp2->rlink;
        }
        temp2->rlink=temp1;
        temp1->llink=temp2;
    }
}
void deleteend()
{
    struct node *temp2=head;
    if(head==NULL)
    {
        printf("dll is empty\n");
        return;
    }
    while(temp2->rlink!=NULL)
    {
        temp2=temp2->rlink;
    }
    printf("the deleted node is:\n");
    printf("ssn=%s\n",temp2->ssn);
    printf("name=%s\n",temp2->name);
    printf("branch=%s\n",temp2->branch);
    temp2->llink->rlink=NULL;
    free(temp2);
}
void create()
{
    int n,i;
    printf("enter the number of employees\n");
    scanf("%d",&n);
    for(i=0;i<n;i++)
        insertend();
}
void display()
{
    int c=0;
    struct node *temp=head;
    while(temp!=NULL)
    {
        printf("the node %d is\n",c+1);
        printf("%s\t",temp->ssn);
        printf("%s\t",temp->name);
        printf("%s\t",temp->branch);
        c=c+1;
        temp=temp->rlink;
    }
    printf("the number of nodes is %d\n",c);
}
void dequeue()
{
    int choice;
    printf("enter your choice\n1.insert at front\n2.insert at rear\n3.delete from front\n4.delete from rear\n5.display\n");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1:printf("enter the details\n");
                insertfront();
                break;
        case 2:printf("enter the details\n");
                insertend();
                break;
        case 3:delfront();
                break;
        case 4:deleteend();
                break;
        case 5:display();
    }
}
void main()
{
    int ch1,ch2,ch3;
    while(1)
    {
        printf("enter your choice\n1.create\n2.display and count\n3.insert and delete at end\n4.insert and delete from front\n5.dll as dequeue\n6.exit\n");
        scanf("%d",&ch1);
        switch(ch1)
        {
            case 1:create();
                    break;
            case 2:display();
                    break;
            case 3:printf("enter your choice\n1.insert\n2.delete\n");
                    scanf("%d",&ch2);
                    if(ch2==1)
                            insertend();
                    else
                        deleteend();
                    break;
            case 4:printf("enter your choice\n1.insert\n2.delete\n");
                    scanf("%d",&ch3);
                    if(ch3==1)
                        insertfront();
                    else
                        delfront();
                    break;
            case 5:dequeue();
                    break;
            case 6:exit(0);
        }
    }
}
